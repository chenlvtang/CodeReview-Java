const d=e=>(e.forEach(r=>{r.children=e.filter(n=>n.parentId===r.id?(n.root=!1,!0):!1),r.children.length<=0&&(r.leaf=!0)}),e.filter(r=>r.root!==!1)),i=(e,r,n)=>{r.forEach(l=>{const c={...l,depth:n};e.push(c),c.children&&(i(e,c.children,n+1),c.children=void 0)})},a=e=>{const r=new Array;return i(r,e,0),r},u=(e,r)=>{for(let n=0,l=e.length;n<l;n+=1){let c;if(e[n].children&&(c=u(e[n].children,r),c)||(c=e.find(r),c))return c}},f=(e,r,n)=>(e.forEach(l=>{(n||l.id===r)&&(l.disabled=!0),f(l.children,r,l.disabled)}),e),b=(e,r)=>r?f(e,r,!1):e,o=e=>(e.forEach(r=>{r.disabled=r.children.length>0,o(r.children)}),e),t=(e,r)=>(!r||r.length<=0||e.forEach(n=>{r.includes(n.id)&&(n.disabled=!0),t(n.children,r)}),e),s=(e,r)=>(e.forEach(n=>{r.includes(n.id)||(n.disabled=!0),s(n.children,r)}),e),T=(e,r)=>r?s(e,r):e,h=(e,r)=>{let n=!0;return e.forEach(l=>{!(l.children&&l.children.length>0)&&!r.includes(l.key)&&!r.includes("*")?l.disabled=!0:n=!1,l.children&&(l.disabled=h(l.children,r))}),n};export{t as a,b,T as c,o as d,u as e,a as f,h as g,d as t};
